'use strict';
/*eslint-disable camelcase */
/**
 * Documentation for notification JSON objects
 *
 * @module external.notifications
 * @license MIT
 */

/**
 * Notification Type Enum
 * @enum {string}
 * @readonly
 */
exports.notificationTypes = {
    /** Notification was generated by an @mention of username */
    mentioned: 1,
    /** Notification was generated by a direct reply to post */
    replied: 2,
    /** Notification was generated by quoting current users post */
    quoted: 3,
    /** Notification was generated by another user editing current users post */
    edited: 4,
    /** Notification was generated by another user liking a post by the current user */
    liked: 5,
    /** Notification was generated by another user posting in a Private Message */
    private_message: 6,
    /** Notification was generated by another user inviting current user to a Private Message */
    invited_to_private_message: 7,
    /** Notification was generated by another user accepting current users invite (to what?)*/
    invitee_accepted: 8,
    /**Notification was generated by another user replying in a watched topic*/
    posted: 9,
    /**Notification was generated by another user moving a post owned by the current user*/
    moved_post: 10,
    /**Notification was generated by another user linking to a post by current user*/
    linked: 11,
    /**Notification was generated by the current user being awarded a badge */
    granted_badge: 12,
    /** Notification was generated by a user inviting current user to topic */
    invited_to_topic: 13,
    /** Notification was generated by a custom plugin? */
    custom: 14
};

/**
 * Notifications contatiner
 *
 * @typedef {object}
 * @name notifiactions
 * @param {notification[]} notifications Array of notifcations for the current user
 * @param {number} total_rows_notifications Total notifications for the current user
 * @param {string} load_more_notifications Relative URL to load next "page" of notifications
 */

/**
 * Notification Object
 *
 * @typedef {object}
 * @name notification
 * @param {number} id Notification Id
 * @param {number} notification_type ID of the notification type
 * @param {boolean} read Notification read marker
 * @param {string} created_at ISO formatted date time of post creation
 * @param {number} post_number Topic specific post number for relevant post
 * @param {number} topic_id Id of the topic for relevant post
 * @param {string} slug URL slug of the topic for relevant post
 * @param {topicNotificationData|badgeNotificationData} data Notification payload
 */

/**
 * Topic relating notification payload
 *
 * @typedef {object}
 * @name topicNotificationData
 * @param {string} topic_title Title of the referenced topic
 * @param {number} original_post_id Post Id of referenced post
 * @param {string} original_username Username of the priginal poster
 * @param {string} display_username Username to display for notification
 */

/**
 * Badge relating notification payload
 *
 * @typedef {object}
 * @name badgeNotificationData
 * @param {number} badge_id Id of the badge awarded
 * @param {string} badge_name Display name of the awarded badge
 */
